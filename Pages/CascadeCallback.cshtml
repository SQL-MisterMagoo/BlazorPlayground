@page "/cc"
<h2>Cascading Value With Callback - "Two Way Binding"</h2>
<ul>
    <li>
        <div class="form-group">
            <span>This is the parent control, try clicking the checkbox - the second checkbox will also change because of the CascadingValue</span>
            <div>
                Click Me :
                <input id="parent " type="checkbox" bind="@ParentValue" />
            </div>
        </div>
        <pre>
        @("<input id=parent type=checkbox bind=@ParentValue />")
        </pre>
    </li>
    <li>
        <div class="form-group">
            <CascadingValue Name="ParentValue" Value="@ParentValue">
                <span>This is the child control, try clicking the checkbox - <i>it will update the parent Value</i></span>
                <div>
                    Click Me :
                    <CheckBox2 Callback="@UpdateValue" />
                </div>
            </CascadingValue>
        </div>
        <pre>
        @("<CascadingValue Name=\"ParentValue\" Value=\"@ParentValue\">")
        @(" <span>This is the child control, try clicking the checkbox - <i>it will update the parent Value</i></span>")
        @(" <CheckBox2 ")<b>@("Callback=\"@UpdateValue\" />")</b>
        @("</CascadingValue>")
        </pre>
        <span>The CheckBox2 implementation : </span><br />
        <span>Here we bind to a local proxy value so we can fire the Callback when the local value changes</span>
        <pre>
        @("<input type=\"checkbox\" bind=\"@Value\" />")
        @("@functions {")
        @("[CascadingParameter(Name =\"ParentValue\")] bool ParentValue { get; set; }")
        <b>@("bool Value { get { return ParentValue; } set { Callback?.Invoke(value); } }")
        @("[Parameter] protected Action<bool> Callback { get; set; }")</b>
        @("}")
        </pre>
    </li>
    <li>
        <div class="form-group">
            <span>Now click the button to refresh this page - nothing will change except the Last Refresh time, because the 
            Callback has already updated this parent page.</span>
            <button id="refresh" onclick="@Refresh" class="btn btn-standard">Refresh</button>
        </div>
        <pre>
        @("<button id=\"refresh\" onclick=\"@Refresh\" class=\"btn btn-standard\">Refresh</button>")
        </pre>
    </li>
    <li class="form-group">
        <span>Last refresh @DateTime.Now</span>
    </li>
</ul>
<span>Page implementation:</span>
<pre>
@("@functions {")
@("bool ParentValue;")
@("void Refresh(UIMouseEventArgs args) => StateHasChanged();")
<b>@("void UpdateValue(bool value) { ParentValue = value; Refresh(null); }")</b>
@("}")
</pre>

@functions
{
bool ParentValue;
void Refresh(UIMouseEventArgs args) => StateHasChanged();
void UpdateValue(bool value) { ParentValue = value; Refresh(null); }
}
